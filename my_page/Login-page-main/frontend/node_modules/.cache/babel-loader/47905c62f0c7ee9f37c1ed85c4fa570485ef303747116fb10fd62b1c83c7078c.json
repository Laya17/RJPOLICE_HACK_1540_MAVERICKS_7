{"ast":null,"code":"// Login validation\n\nfunction Validation(values) {\n  let error = {};\n  const customerId_pattern = /^[a-zA-Z0-9]{2}$/; // Change the pattern for 4-letter alphanumeric customer ID\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.customerId === \"\") {\n    error.customerId = \"Customer ID should not be empty\";\n  } else if (!customerId_pattern.test(values.customerId)) {\n    error.customerId = \"Customer ID should be 4 letters alphanumeric\";\n  } else {\n    error.customerId = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password did not match\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","customerId_pattern","password_pattern","customerId","test","password","_c","$RefreshReg$"],"sources":["C:/Users/laya_/Downloads/my_page/Login-page-main/frontend/src/Validation.js"],"sourcesContent":["// Login validation\r\n\r\nfunction Validation(values) {\r\n    let error = {};\r\n    const customerId_pattern = /^[a-zA-Z0-9]{2}$/; // Change the pattern for 4-letter alphanumeric customer ID\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\r\n\r\n    if (values.customerId === \"\") {\r\n        error.customerId = \"Customer ID should not be empty\";\r\n    } else if (!customerId_pattern.test(values.customerId)) {\r\n        error.customerId = \"Customer ID should be 4 letters alphanumeric\";\r\n    } else {\r\n        error.customerId = \"\";\r\n    }\r\n\r\n    if (values.password === \"\") {\r\n        error.password = \"Password should not be empty\";\r\n    } else if (!password_pattern.test(values.password)) {\r\n        error.password = \"Password did not match\";\r\n    } else {\r\n        error.password = \"\";\r\n    }\r\n    \r\n    return error;\r\n}\r\n\r\nexport default Validation;\r\n"],"mappings":"AAAA;;AAEA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,kBAAkB,GAAG,kBAAkB,CAAC,CAAC;EAC/C,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAIH,MAAM,CAACI,UAAU,KAAK,EAAE,EAAE;IAC1BH,KAAK,CAACG,UAAU,GAAG,iCAAiC;EACxD,CAAC,MAAM,IAAI,CAACF,kBAAkB,CAACG,IAAI,CAACL,MAAM,CAACI,UAAU,CAAC,EAAE;IACpDH,KAAK,CAACG,UAAU,GAAG,8CAA8C;EACrE,CAAC,MAAM;IACHH,KAAK,CAACG,UAAU,GAAG,EAAE;EACzB;EAEA,IAAIJ,MAAM,CAACM,QAAQ,KAAK,EAAE,EAAE;IACxBL,KAAK,CAACK,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MAAM,IAAI,CAACH,gBAAgB,CAACE,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,EAAE;IAChDL,KAAK,CAACK,QAAQ,GAAG,wBAAwB;EAC7C,CAAC,MAAM;IACHL,KAAK,CAACK,QAAQ,GAAG,EAAE;EACvB;EAEA,OAAOL,KAAK;AAChB;AAACM,EAAA,GAtBQR,UAAU;AAwBnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}